name: UI Tests

on:
  workflow_dispatch:

jobs:
  ui-tests:
    runs-on: ubuntu-latest

    steps:
      # Шаг для получения кода из репозитория
      - name: Checkout repository
        uses: actions/checkout@v3

      # Шаг для установки Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # Шаг для установки зависимостей
      - name: Install dependencies
        run: pip install -r requirements.txt

      # Шаг для установки Allure
      - name: Install Allure
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jre curl tar
          curl -o allure-2.17.2.tgz -Ls https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.17.2/allure-commandline-2.17.2.tgz
          tar -zxvf allure-2.17.2.tgz -C /opt/
          sudo ln -s /opt/allure-2.17.2/bin/allure /usr/local/bin/allure
          rm allure-2.17.2.tgz

      # Шаг для получения ID артефакта
      - name: Get Artifact ID
        run: |
          artifact_list=$(curl -s -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/artifacts)

          artifact_id=$(echo "$artifact_list" | jq -r '.artifacts[0].id')
          echo "Artifact ID: $artifact_id"
          echo "ARTIFACT_ID=$artifact_id" >> $GITHUB_ENV

      # Шаг для скачивания артефакта
      - name: Download Artifact
        run: |
          curl -L -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
            -o artifact.zip \
            https://api.github.com/repos/${{ github.repository }}/actions/artifacts/$ARTIFACT_ID/zip

      # Шаг для распаковки артефакта
      - name: Unzip artifact
        run: |
          unzip artifact.zip -d artifact

      # Шаг для вывода содержимого распакованного артефакта
      - name: List artifact directory contents
        run: |
          ls -R artifact

      # Шаг для проверки существования директорий перед копированием
      - name: Check if directories exist before copying
        run: |
          if [ -d "artifact/history" ]; then
            echo "History directory found"
          else
            echo "History directory not found"
          fi
          
          if [ -d "artifact/pages" ]; then
            echo "Pages directory found"
          else
            echo "Pages directory not found"
          fi

      # Шаг для копирования необходимых директорий
      - name: Copy history and pages directories
        run: |
          if [ -d "artifact/history" ]; then
            cp -R artifact/history allures/history
          else
            echo "History directory not found, skipping copy"
          fi

          if [ -d "artifact/pages" ]; then
            cp -R artifact/pages allures/pages
          else
            echo "Pages directory not found, skipping copy"
          fi

      # Шаг для выполнения тестов с использованием pytest
      - name: Run tests
        run: pytest --alluredir=allure-results

      # Шаг для генерации отчета Allure
      - name: Generate Allure report
        run: allure generate allure-results --clean -o allure-report

      # Шаг для деплоя отчета на GitHub Pages
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          token: ${{ secrets.GH_TOKEN }}
          branch: gh-pages
          folder: allure-report
          clean: true
